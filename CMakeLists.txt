cmake_minimum_required(VERSION 2.8)
project(GMCL14)

add_compile_options(-std=c++1y -Wall -Wextra -g)
include_directories(${PROJECT_SOURCE_DIR}/src)

enable_testing()

file(GLOB test_sources test/*.cpp)
foreach(path IN LISTS test_sources)
    get_filename_component(target ${path} NAME_WE)
    add_executable(${target} ${path} src/gmcl14/formats/nonzero.hpp src/gmcl14/formats/vector.hpp src/gmcl14/formats/symmetry.hpp src/gmcl14/formats/bounds_checker.hpp src/gmcl14/formats/matrix.hpp src/gmcl14/initializers/comma.hpp src/gmcl14/dsl.hpp)
    if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
        add_compile_options(-stdlib=libc++ -fcolor-diagnostics)
        target_link_libraries(${target} c++)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        add_compile_options(-fdiagnostics-color=auto)
    endif()
    add_test(NAME ${target} COMMAND $<TARGET_FILE:${target}>)
    file(RELATIVE_PATH rpath ${CMAKE_SOURCE_DIR} ${path})
endforeach()
